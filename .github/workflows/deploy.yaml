name: 'Deploy to AWS CloudFormation'

on: 
  push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]
  
env:
  SAM_TEMPLATE: test-stack.yaml
  REGION: ap-southeast-2
  AWS_SAM_STACK_NAME: sc-app


jobs:
  build-and-package:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      
      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container
        
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.REGION }}
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          
      - name: Upload artifacts to testing artifact buckets
        run: |
          sam package \
            --s3-bucket sc-app-bucket \
            --region ${REGION} \
            --output-template-file packaged-test.yaml
            
      - uses: actions/upload-artifact@v2
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml
        

          
          
  
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code from master branch
        uses: actions/checkout@v2

      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: ${{ github.event.inputs.region }}

      # Deploy to AWS CloudFormation
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: paul-test-stack
          template: test-stack.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "EC2InstanceType=t2.micro"
  